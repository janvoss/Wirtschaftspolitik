# (Neue) Politische Ökonomie

## Vorüberlegungen

## Das Condorcet-Paradoxon

### Der problemlose Fall: nur eingipflige Präferenzen

```{r}
#| warning: false
#| message: false
#| fig-cap: "Präferenzen von 3 Personen, alle eingipflig"

library(ggplot2)
# Condorcet-Paradoxon

## df

df <- data.frame(Person    = rep(c('A', 'B', 'C'), each=3),
                 Menge     = rep(c(1,2,3),              3),
                 Präferenz = c(3,2,1,
                               1,2,3,
                               1,3,2))

#head(df)


# Funktion definieren, damit der Plot für geänderte Daten repliziert werden kann
generiere_plot <- function(df) {
           ggplot(df, aes(Menge, Präferenz, color=Person))+
          geom_line()+
          geom_point(size=3, alpha=.5)+
          scale_x_continuous(breaks=c(1,2,3),
                             labels=c('wenig', 'mittel', 'viel'))+
          scale_y_continuous(breaks=c(1,2,3),
                             labels=c('niedrig', 'moderat', 'hoch'))+
          theme_light()+
          theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
}

generiere_plot(df)
```

Abstimmung durch paarweisen Vergleich:

wenig vs. mittel: 1:2

mittel vs. viel: 2:1

Also: mittel $\succ$ wenig und mittel $\succ$ viel

Für gesellschaftliche Rangfolge noch testen

wenig vs. viel: 1:2

Also $\boxed{\text{mittel} \succ \text{viel} \succ \text{wenig}}$

Eindeutiges Abstimmungsergebnis, konsistente Rangfolge

### Der problematische Fall: mehrgipflige Präferenzen


```{r}
#| warning: false
#| message: false
#| fig-cap: "Präferenzen von 3 Personen, Präferenz von B mehrgipflig"

# Änderung einer Präferenzstruktur

df$`Präferenz`[4:5] <- c(2, 1) # Mehrgipflige Präferenz bei B

generiere_plot(df)

```

Abstimmung durch paarweisen Vergleich:

wenig vs. mittel: 2:1

wenig vs. viel: 1:2

Also: viel $\succ$ wenig  $\succ$ mittel

Das sieht konsistent aus. Aber es fehlt noch ein Vergleich.

viel vs. mittel: 2:1

$\boxed{\text{Ups!}}$

Die gesellschaftliche Rangfolge als Ergebnis der demokratischen Abstimmung lautet also  $\boxed{\text{viel} \succ \text{wenig} \succ \text{mittel} \succ \text{viel}\succ \text{wenig} \succ \dots}$

Kein eindeutiges Abstimmungsergebnis, inkonsistente Rangfolge $\rightarrow$ $\boxed{\text{intransitive soziale Präferenz}}$


## Erinnerung: Arrows Unmöglichkeitstheorem

## Stimmentausch

### Expliziter Stimmentausch

#### Ein Zahlenbeispiel

```{r}
#| warning: false
#| message: false

library(knitr)

df <- data.frame(Wähler=c("A", "B", "C"),
                 `Projekt I` =c(5, -2, -2),
                 `Projekt II`=c(-2, 5, -2))

kable(df)

```


#### Ein grafisches Beispiel
```{r}
#| message: false
#| warning: false
#| fig-cap: "Drei Abstimmende mit drei Idealpunkten"

library(ggplot2)

# Zentren der Kreise mit center_id als Buchstaben
centers <- data.frame(
  x0 = c(2, 5, 8),
  y0 = c(4, 8, 3),
  center_id = c("A", "B", "C")
)

# Funktion, die für ein Zentrum beliebig viele Kreise (verschiedene Radien) erzeugt
make_circles <- function(center, radii, npoints = 100) {
  theta <- seq(0, 2 * pi, length.out = npoints)
  circles <- do.call(rbind, lapply(radii, function(r) {
    data.frame(
      x = center$x0 + r * cos(theta),
      y = center$y0 + r * sin(theta),
      center_id = center$center_id,
      radius = r
    )
  }))
  circles
}

# Jedem Zentrum zwei Kreise mit verschiedenen Radien zuordnen
all_circles <- do.call(rbind, Map(make_circles,
                                  split(centers, seq(nrow(centers))),
                                  list(c(1, 2, 3), c(1.5, 2.5, 3.5), c(1, 3, 4))))

# Zentren für ein geschlossenes Dreieck vorbereiten
centers_triangle <- rbind(centers, centers[1, ])

# Plot mit Kreisen, Mittelpunkten und geschlossenem Dreieck
p <- ggplot(all_circles, aes(x, y, group = interaction(center_id, radius), color = center_id)) +
 geom_path(linewidth = .7) +
 geom_path(linewidth = 1, color='white') +
  geom_point(data = centers, aes(x = x0, y = y0), color = c('red', 'green', 'blue'), size = 3, inherit.aes = FALSE) + # ok, nicht die reine Lehre...
 # geom_path(data = centers_triangle, aes(x = x0, y = y0),
 #           color = "black", linetype = "dashed", linewidth = 1, inherit.aes = FALSE) +
  scale_x_continuous(breaks=NULL)+
  scale_y_continuous(breaks=NULL)+
  coord_fixed() +
  theme_light() +
  labs(x=expression(G[1]),
       y=expression(G[2]),
color = "Person")

p
```


```{r}
#| warning: false
#| message: false
#| fig-cap: "Kreisrunde Isonutzenlinien"

p <- p + geom_path(linewidth = 1)
p

```


```{r}
#| message: false
#| warning: false
#| fig-cap: "Pareto-Menge"

p + geom_path(data = centers_triangle, aes(x = x0, y = y0),
           color = "black", linetype = "dashed", linewidth = 1, inherit.aes = FALSE)
```


### Impliziter Stimmentausch

## Ein alternatives Wahlverfahren: Die Borda-Wahl